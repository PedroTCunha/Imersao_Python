# -*- coding: utf-8 -*-
"""Imersão Python - Aula 3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U6KGWJawNDNiuUHPy93987virSfc4nzT

Aula 2 - Importação
"""

import pandas as pd
import plotly.express as px

df_principal = pd.read_excel("//content/Imersão_Python-Tabela_de_ações.xlsx", sheet_name="Principal")

df_principal.head(10)

df_total_acoes = pd.read_excel("/content/Imersão_Python-Tabela_de_ações.xlsx", sheet_name="Total_de_acoes")

df_total_acoes

df_ticker = pd.read_excel("/content/Imersão_Python-Tabela_de_ações.xlsx", sheet_name="Ticker")

df_ticker

df_gpt = pd.read_excel("/content/Imersão_Python-Tabela_de_ações.xlsx", sheet_name="ChatGPT")

df_gpt

df_principal = df_principal[['Ativo', 'Data', 'Último (R$)', 'Var. Dia (%)']].copy()
df_principal

df_principal = df_principal.rename(columns={"Último (R$)":"valor_final", "Var. Dia (%)":"var_dia_pct"}).copy()
df_principal

df_principal["var_pct"] = df_principal['var_dia_pct'] / 100
df_principal["valor_inicial"] = df_principal["valor_final"] / (df_principal["var_pct"] + 1)
df_principal

df_principal = df_principal.merge(df_total_acoes, left_on="Ativo", right_on="Código", how="left")
df_principal

df_principal = df_principal.drop(columns=["Código"])
df_principal

df_principal["variacao"] = (df_principal["valor_final"] - df_principal["valor_inicial"]) * df_principal['Qtde. Teórica']
df_principal

pd.options.display.float_format = '{:.2f}'.format

df_principal['Qtde. Teórica'] = df_principal['Qtde. Teórica'].astype(int)

df_principal

df_principal = df_principal.rename(columns={"Qtde. Teórica":"qtd_teorica"}).copy()

df_principal

df_principal["resultado"] = df_principal["variacao"].apply(lambda x: 'Subiu' if x > 0 else ('Desceu' if x < 0 else 'Estável'))
df_principal

df_principal = df_principal.merge(df_ticker, left_on="Ativo", right_on="Ticker", how="left")
df_principal = df_principal.drop(columns=["Ticker"])

df_principal

df_principal = df_principal.merge(df_gpt, left_on="Nome", right_on="Nome da Empresa", how="left")
df_principal = df_principal.drop(columns=["Nome da Empresa"])

df_principal

df_principal["cat_idade"] = df_principal["Idade"].apply(lambda x: 'Menos de 50' if x < 50 else ('Mais de 100' if x > 100 else 'Entre 50 e 100'))
df_principal

# Calcular a maior variação
maior_variacao = df_principal['variacao'].max()

# Calcular a menor variação
menor_variacao = df_principal['variacao'].min()

# Calcular a média das variações
media_variacao = df_principal['variacao'].mean()

# Calcular a média das variações para as que subiram
media_subiu = df_principal[df_principal['resultado'] == 'Subiu']['variacao'].mean()

# Calcular a média das variações para as que desceram
media_desceu = df_principal[df_principal['resultado'] == 'Desceu']['variacao'].mean()

# Imprimir os resultados
print(f"Maior:\tR$ {maior_variacao:,.2f}")
print(f"Menor:\tR$ {menor_variacao:,.2f}")
print(f"Média:\tR$ {media_variacao:,.2f}" )
print(f"Média das que subiram:\tR$ {media_subiu:,.2f}")
print(f"Média das que desceram:\tR$ {media_desceu:,.2f}")

df_principal_subiu = df_principal[df_principal['resultado'] == 'Subiu']
df_principal_subiu

df_analise_segmento = df_principal_subiu.groupby("Segmento")["variacao"].sum().reset_index()
df_analise_segmento

df_analise_saldo = df_principal.groupby("resultado")["variacao"].sum().reset_index()
df_analise_saldo

df_analise_etaria = df_principal_subiu.groupby("cat_idade")["variacao"].sum().reset_index()
df_analise_etaria

fig = px.bar(df_analise_saldo, x="resultado", y="variacao", text="variacao", text_auto=",.2f", hover_data={"variacao":":,.2f"}, title="variação reais por resultado")
fig.show()

fig = px.pie (df_analise_segmento, values="variacao", names="Segmento", hover_data={"variacao":":,.2f"}, title="Variação por Segmento")
fig.update_traces(textposition='inside', textinfo='percent+label')

fig.show()

fig = px.bar (df_analise_etaria, x="cat_idade", y="variacao", text="variacao", text_auto=",.2f", hover_data={"variacao":":,.2f"}, title="Variação por Faixa Etária")
fig.show()